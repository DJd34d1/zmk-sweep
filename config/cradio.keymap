/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


&mt {
  //  flavor = "tap-preferred";
   // tapping_term_ms = <200>;
};

/ { 

    combos {
        compatible = "zmk,combos";
            combo_esc {
            timeout-ms = <50>;
            key-positions = <10 11>;
            bindings = <&kp ESC>;
        };
        
            combo_tab {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp TAB>;
        };
        
            combo_bspc {
            timeout-ms = <50>;
            key-positions = <8 9>;
            bindings = <&kp BSPC>;
        };
        
            combo_lalt {
            timeout-ms = <50>;
            key-positions = <11 12>;
            bindings = <&kp LALT>;
        };
        
            combo_lgui {
            timeout-ms = <50>;
            key-positions = <12 13>;
            bindings = <&kp LGUI>;
        };
        
        
            combo_ret {
            timeout-ms = <50>;
            key-positions = <18 19>;
            bindings = <&kp RET>;
        };
        
    	    combo_ralt {                                                                                                                          
            timeout-ms = <50>;                                                                                                                    
            key-positions = <17 16>;                                                                                                                
            bindings = <&kp RALT>;                                                                                                                
         };

	    combo_pg_up {
            timeout-ms = <50>;
            key-positions = <7 8>;
            bindings = <&kp PG_UP>;
        };
						combo_pg_dn {
						timeout-ms = <50>;
						key-positions = <17 18>;
						bindings = <&kp PG_DN>;
				 };

        
    };

        keymap {
                compatible = "zmk,keymap";
                
       		default_layer {
		bindings = <
		&kp Q &kp W &kp E &kp R &kp T 					  &kp Y &kp U  &kp I &kp O   &kp P 
		&kp A &kp S &kp D &mt LSFT F &mt LSFT G 			  &mt RSFT H &kp J  &kp K &kp L   &kp SQT
		&mt LSFT Z &kp X &kp C &kp V &kp B				  &kp N &kp M  &kp CMMA &kp DOT &mt LSFT FSLH
          				&lt 1 SPC &kp LCTL  				&lt 1 TAB &lt 2 BSPC
		>;
		};

       		left_layer {
		bindings = <
		&kp GRAVE &kp F2      &kp F3    &kp F4    &kp F5		    &kp ASTRK &kp NUM_7  &kp NUM_8 &kp NUM_9 &kp EQUAL
		&kp F6    &kp F7      &kp F8    &kp F9    &kp F10 		    &kp MINUS &kp NUM_4  &kp NUM_5 &kp NUM_6 &kp PLUS 
		&kp F1    &kp TILDE 	&kp TILDE &kp F11   &kp F12 	    	    &kp NUM_0 &kp NUM_1  &kp NUM_2 &kp NUM_3  &kp SLASH
					    &trans  &kp LSFT  					&trans  &kp BSPC
		>;
		};
		
		right_layer {
		bindings = <
		&kp EXCL  &kp AT &kp HASH  &kp DLLR  &kp PRCNT    			&kp CARET  &kp AMPS &kp ASTRK &kp LPAR &kp RPAR 
		&kp LBKT  &kp RBKT  &kp LBRC &kp RBRC &kp PIPE         			&kp LEFT &kp DOWN  &kp UP  &kp RIGHT   &kp SEMI
		&kp LSFT  &kp KPLS &kp LBKT &kp RBKT   &kp BSLH    			&kp QMARK &kp EQUAL &kp PIPE &kp MINUS  &kp UNDER
					  &mo 3 &kp LCTL  				&kp SPC  &trans 
		>;
		};	
		
		tri_layer {
		bindings = <
		&kp NUM_1  &kp NUM_2    &kp NUM_3    &kp NUM_4    &kp NUM_5 			&trans &trans   &trans   &trans  &kp F12
		&kp F1 &kp F2 &kp F3 &bt BT_NXT &bt BT_PRV					&trans &kp PG_UP  &kp K_VOL_UP &kp K_MUTE &trans 
		&bt BT_CLR  &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3	   		&trans &kp PG_DN  &kp K_VOL_DN  &trans &trans   
					 &trans &trans  					&trans &trans 
		>;
		};	
        
	};
};
